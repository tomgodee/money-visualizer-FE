/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";

export function One(props: any) {
  const { nodes, materials } = useGLTF("/all_bills/scene.glb");
  const { setTarget } = props;
  const [hovered, setHovered] = useState(false);

  useEffect(() => {
    document.body.style.cursor = hovered ? "pointer" : "auto";

    return () => {
      document.body.style.cursor = "auto";
    };
  }, [hovered]);
  return (
    <group
      {...props}
      dispose={null}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
    >
      <group rotation={[Math.PI / 2, 0, -Math.PI]}>
        <group rotation={[-Math.PI, 0, 0]} scale={1}>
          <group rotation={[0, 0, -Math.PI]} scale={[7, 6.63, 100]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["1D_1DFront_Mat_0"].geometry}
              material={materials["1DFront_Mat"]}
              onDoubleClick={(e) => {
                setTarget(e.intersections[0].point.clone());
              }}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["1D_1DBack_Mat_0"].geometry}
              material={materials["1DBack_Mat"]}
              onDoubleClick={(e) => {
                setTarget(e.intersections[0].point.clone());
              }}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/all_bills/scene.glb");
